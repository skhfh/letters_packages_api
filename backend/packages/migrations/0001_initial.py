# Generated by Django 3.2.3 on 2025-03-26 14:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('lastname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='Введите номер телефона в формате +7XXXXXXXXXX', regex='^\\+7\\d{10}$')], verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='PostOffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=150, verbose_name='Адрес ПО')),
                ('postal_index', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(code='invalid_postal_index', message='Введите почтовый индекс из шести цифр', regex='^\\d{6}$')], verbose_name='Почтовый индекс')),
            ],
            options={
                'verbose_name': 'Почтовое отделение',
                'verbose_name_plural': 'Почтовые отделения',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(1, 'Мелкий пакет'), (2, 'Посылка'), (3, 'Посылка 1 класса'), (4, 'Ценная посылка'), (5, 'Посылка международная'), (6, 'Экспресс-посылка')], verbose_name='Тип посылки')),
                ('cost', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Сумма платежа должна быть более 1 руб.')], verbose_name='Сумма платежа')),
                ('arrival_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_package_to', to='packages.postoffice', verbose_name='Пункт получения')),
                ('departure_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_package_from', to='packages.postoffice', verbose_name='Пункт отправки')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_recipient', to='packages.client', verbose_name='Получатель')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_sender', to='packages.client', verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Посылка',
                'verbose_name_plural': 'Посылки',
            },
        ),
        migrations.CreateModel(
            name='Letter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(1, 'Письмо'), (2, 'Заказное письмо'), (3, 'Ценное письмо'), (4, 'Экспресс-письмо')], verbose_name='Тип письма')),
                ('weight', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Вес письма должно быть более 1 г.')], verbose_name='Вес письма')),
                ('arrival_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_letter_to', to='packages.postoffice', verbose_name='Пункт получения')),
                ('departure_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_letter_from', to='packages.postoffice', verbose_name='Пункт отправки')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_recipient', to='packages.client', verbose_name='Получатель')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='letter_sender', to='packages.client', verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Письмо',
                'verbose_name_plural': 'Письма',
            },
        ),
        migrations.AddConstraint(
            model_name='package',
            constraint=models.CheckConstraint(check=models.Q(('sender', django.db.models.expressions.F('recipient')), _negated=True), name='package_sender_and_recipient_different'),
        ),
        migrations.AddConstraint(
            model_name='package',
            constraint=models.CheckConstraint(check=models.Q(('departure_office', django.db.models.expressions.F('arrival_office')), _negated=True), name='package_and_arrival_different'),
        ),
        migrations.AddConstraint(
            model_name='letter',
            constraint=models.CheckConstraint(check=models.Q(('sender', django.db.models.expressions.F('recipient')), _negated=True), name='letter_sender_and_recipient_different'),
        ),
        migrations.AddConstraint(
            model_name='letter',
            constraint=models.CheckConstraint(check=models.Q(('departure_office', django.db.models.expressions.F('arrival_office')), _negated=True), name='letter_departure_and_arrival_different'),
        ),
    ]
